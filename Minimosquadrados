# -*- coding: utf-8 -*-
"""
Created on Fri Jun 10 18:29:57 2022

@author: 55359
"""

#Mínimos Quadrados aplicada nos dados encontrados no SysIdentPy
import numpy as np
import matplotlib.pyplot as plt
import random
import math
#Gerando saída e entradas aleatórias com o comando random
xi = np.random.uniform(-1, 1, 100)
yi = np.zeros(100)
#Gerando o gráfico com os parâmetros encontrados pelo SysIdentPy
for k in range(2, 100):
    yi[k] = 0.9*xi[k - 2] + 0.2*yi[k - 1] + 0.099*(xi[k - 1] * yi[k - 1]) 
#Aplicando os mínimos quadrados
matriz = np.zeros((98,3))
s = []
for k in range(2, 100):
    matriz [k-2][0] = xi[k-2]
    matriz [k-2][1] = yi[k - 1]
    matriz [k-2][2] = xi[k - 1] * yi[k - 1]
    s.append(k)
# Tetra = (x^t * x^-1)^-1 *x^t*y
u = matriz.T
w =  np.matmul (u,matriz)
h = np.linalg.inv(w)
n = np.matmul(h, u)
resultado = n.dot(yi[2:])
print('Parâmetros encontrados por MQ: ', resultado)

num_um = float(resultado[0])
num_dois =float(resultado[1])
num_tres = float(resultado[2])
#Obtendo a reta através dos parâmetros encontrados através de minínmos quadrados
y = np.zeros(100)
amostras = []
for k in range(2, 100):
    y[k] = num_um*xi[k - 2] + num_dois*y[k - 1] 
    + num_tres*(xi[k - 1] * y[k - 1]) 
for t in range(0, 100):
    amostras.append(t)
#Plotando o gráfico através dos parâmentros encontrados pelo SysIdentPy
plt.title('Sysidentpy')
plt.xlabel('Amostras')
plt.ylabel('Saída')
plt.plot(amostras, yi, 'r',linewidth=3, label = 'Modelo do Sysidenpy')
plt.show()
#Plotando o gráfico através dos parâmentros encontrados pelo Mínimos Quadrados
plt.title('Minímos Quadrados')
plt.xlabel('Amostras')
plt.ylabel('Saída')
plt.plot(amostras, y, 'b', linewidth=3, label = 'Minimos quadrados')
plt.show()
#Comparando os resultados
plt.title('Validação dos Resultados')
plt.xlabel('Amostras')
plt.ylabel('Saída')
plt.plot(amostras, y, 'b', linewidth=3, label = 'Minimos quadrados')
plt.plot(amostras, yi, 'r', linewidth=3, label = 'Modelo do Sysidenpy')
plt.show()